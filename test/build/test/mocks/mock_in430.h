/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_IN430_H
#define _MOCK_IN430_H

#include "in430.h"

void mock_in430_Init(void);
void mock_in430_Destroy(void);
void mock_in430_Verify(void);




#define _enable_interrupts_Ignore() _enable_interrupts_CMockIgnore()
void _enable_interrupts_CMockIgnore(void);
#define _enable_interrupts_Expect() _enable_interrupts_CMockExpect(__LINE__)
void _enable_interrupts_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK__enable_interrupts_CALLBACK)(int cmock_num_calls);
void _enable_interrupts_StubWithCallback(CMOCK__enable_interrupts_CALLBACK Callback);
#define _disable_interrupts_Ignore() _disable_interrupts_CMockIgnore()
void _disable_interrupts_CMockIgnore(void);
#define _disable_interrupts_Expect() _disable_interrupts_CMockExpect(__LINE__)
void _disable_interrupts_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK__disable_interrupts_CALLBACK)(int cmock_num_calls);
void _disable_interrupts_StubWithCallback(CMOCK__disable_interrupts_CALLBACK Callback);
#define _bic_SR_register_IgnoreAndReturn(cmock_retval) _bic_SR_register_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void _bic_SR_register_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, unsigned short cmock_to_return);
#define _bic_SR_register_ExpectAndReturn(mask, cmock_retval) _bic_SR_register_CMockExpectAndReturn(__LINE__, mask, cmock_retval)
void _bic_SR_register_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, unsigned short mask, unsigned short cmock_to_return);
typedef unsigned short (* CMOCK__bic_SR_register_CALLBACK)(unsigned short mask, int cmock_num_calls);
void _bic_SR_register_StubWithCallback(CMOCK__bic_SR_register_CALLBACK Callback);
#define _bic_SR_register_on_exit_IgnoreAndReturn(cmock_retval) _bic_SR_register_on_exit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void _bic_SR_register_on_exit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, unsigned short cmock_to_return);
#define _bic_SR_register_on_exit_ExpectAndReturn(mask, cmock_retval) _bic_SR_register_on_exit_CMockExpectAndReturn(__LINE__, mask, cmock_retval)
void _bic_SR_register_on_exit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, unsigned short mask, unsigned short cmock_to_return);
typedef unsigned short (* CMOCK__bic_SR_register_on_exit_CALLBACK)(unsigned short mask, int cmock_num_calls);
void _bic_SR_register_on_exit_StubWithCallback(CMOCK__bic_SR_register_on_exit_CALLBACK Callback);
#define _bis_SR_register_IgnoreAndReturn(cmock_retval) _bis_SR_register_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void _bis_SR_register_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, unsigned short cmock_to_return);
#define _bis_SR_register_ExpectAndReturn(mask, cmock_retval) _bis_SR_register_CMockExpectAndReturn(__LINE__, mask, cmock_retval)
void _bis_SR_register_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, unsigned short mask, unsigned short cmock_to_return);
typedef unsigned short (* CMOCK__bis_SR_register_CALLBACK)(unsigned short mask, int cmock_num_calls);
void _bis_SR_register_StubWithCallback(CMOCK__bis_SR_register_CALLBACK Callback);
#define _bis_SR_register_on_exit_IgnoreAndReturn(cmock_retval) _bis_SR_register_on_exit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void _bis_SR_register_on_exit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, unsigned short cmock_to_return);
#define _bis_SR_register_on_exit_ExpectAndReturn(mask, cmock_retval) _bis_SR_register_on_exit_CMockExpectAndReturn(__LINE__, mask, cmock_retval)
void _bis_SR_register_on_exit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, unsigned short mask, unsigned short cmock_to_return);
typedef unsigned short (* CMOCK__bis_SR_register_on_exit_CALLBACK)(unsigned short mask, int cmock_num_calls);
void _bis_SR_register_on_exit_StubWithCallback(CMOCK__bis_SR_register_on_exit_CALLBACK Callback);
#define _get_SR_register_IgnoreAndReturn(cmock_retval) _get_SR_register_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void _get_SR_register_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, unsigned short cmock_to_return);
#define _get_SR_register_ExpectAndReturn(cmock_retval) _get_SR_register_CMockExpectAndReturn(__LINE__, cmock_retval)
void _get_SR_register_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, unsigned short cmock_to_return);
typedef unsigned short (* CMOCK__get_SR_register_CALLBACK)(int cmock_num_calls);
void _get_SR_register_StubWithCallback(CMOCK__get_SR_register_CALLBACK Callback);
#define _get_SR_register_on_exit_IgnoreAndReturn(cmock_retval) _get_SR_register_on_exit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void _get_SR_register_on_exit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, unsigned short cmock_to_return);
#define _get_SR_register_on_exit_ExpectAndReturn(cmock_retval) _get_SR_register_on_exit_CMockExpectAndReturn(__LINE__, cmock_retval)
void _get_SR_register_on_exit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, unsigned short cmock_to_return);
typedef unsigned short (* CMOCK__get_SR_register_on_exit_CALLBACK)(int cmock_num_calls);
void _get_SR_register_on_exit_StubWithCallback(CMOCK__get_SR_register_on_exit_CALLBACK Callback);
#define _swap_bytes_IgnoreAndReturn(cmock_retval) _swap_bytes_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void _swap_bytes_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, unsigned short cmock_to_return);
#define _swap_bytes_ExpectAndReturn(src, cmock_retval) _swap_bytes_CMockExpectAndReturn(__LINE__, src, cmock_retval)
void _swap_bytes_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, unsigned short src, unsigned short cmock_to_return);
typedef unsigned short (* CMOCK__swap_bytes_CALLBACK)(unsigned short src, int cmock_num_calls);
void _swap_bytes_StubWithCallback(CMOCK__swap_bytes_CALLBACK Callback);
#define _nop_Ignore() _nop_CMockIgnore()
void _nop_CMockIgnore(void);
#define _nop_Expect() _nop_CMockExpect(__LINE__)
void _nop_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK__nop_CALLBACK)(int cmock_num_calls);
void _nop_StubWithCallback(CMOCK__nop_CALLBACK Callback);
#define _never_executed_Ignore() _never_executed_CMockIgnore()
void _never_executed_CMockIgnore(void);
#define _never_executed_Expect() _never_executed_CMockExpect(__LINE__)
void _never_executed_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK__never_executed_CALLBACK)(int cmock_num_calls);
void _never_executed_StubWithCallback(CMOCK__never_executed_CALLBACK Callback);

#endif
